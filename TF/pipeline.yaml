trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: terraform-secrets  # ðŸ‘ˆ Manual Variable Group with secrets
- name: TF_WORKING_DIR
  value: '$(System.DefaultWorkingDirectory)'

- name: backend_rg
  value: "ramyarg"
- name: backend_storage_account
  value: "ramyadevstorage"
- name: backend_container
  value: "tfstate"
- name: backend_key
  value: "dev.terraform.tfstate"

steps:

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'

- task: TerraformInstaller@1
  inputs:
    terraformVersion: '1.7.5'

- script: |
    echo "Running terraform init"
    terraform init \
      -backend-config="resource_group_name=$(backend_rg)" \
      -backend-config="storage_account_name=$(backend_storage_account)" \
      -backend-config="container_name=$(backend_container)" \
      -backend-config="key=$(backend_key)"
  displayName: 'Terraform Init'
  env:
    ARM_CLIENT_ID: $(ARM_CLIENT_ID)
    ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
    ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
    ARM_TENANT_ID: $(ARM_TENANT_ID)

- script: |
    terraform plan -var-file="dev.tfvars" -out=tfplan
  displayName: 'Terraform Plan'
  env:
    ARM_CLIENT_ID: $(ARM_CLIENT_ID)
    ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
    ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
    ARM_TENANT_ID: $(ARM_TENANT_ID)

- script: |
    terraform apply -auto-approve tfplan
  displayName: 'Terraform Apply'
  env:
    ARM_CLIENT_ID: $(ARM_CLIENT_ID)
    ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
    ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
    ARM_TENANT_ID: $(ARM_TENANT_ID)
